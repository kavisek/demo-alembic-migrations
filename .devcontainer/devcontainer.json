// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.234.0/containers/docker-existing-docker-compose
// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
	"name": "Application",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose.yaml",
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "app",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace",
	"shutdownAction": "stopCompose",

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.python",
		"grapecity.gc-excelviewer",
		"almenon.arepl",
		"akamud.vscode-theme-onedark",
		"ms-vscode.azure-account",
		"ms-azuretools.vscode-azureterraform",
		"formulahendry.code-runner",
		"paiqo.databricks-vscode",
		"ms-azuretools.vscode-docker",
		"eamodio.gitlens",
		"hashicorp.terraform",
		"ms-toolsai.jupyter",
		"technosophos.vscode-make",
		"shd101wyy.markdown-preview-enhanced",
		"davidanson.vscode-markdownlint",
		"taoklerks.poor-mans-t-sql-formatter-vscode",
		"searking.preview-vscode",
		"esbenp.prettier-vscode",
		"redhat.vscode-yaml",
		"tomoki1207.pdf",
		"njpwerner.autodocstring",
		"stuart.unique-window-colors"
	],
	// Mount parameter does not work with docker compose. Use the volumes param in the docker 
	// compose file directly.
	// "mounts": [
	// 	"source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/root/.ssh,type=bind,consistency=cached",
	// 	"source=${localEnv:HOME}${localEnv:USERPROFILE}/.gitconfig,target=/root/.gitconfig,type=bind,consistency=cached",
	// 	"source=${localEnv:HOME}${localEnv:USERPROFILE}/.bash_profile,target=/root/.bashrc,type=bind,consistency=cached",
	// 	"source=${localEnv:HOME}${localEnv:USERPROFILE}/.config,target=/root/.config,type=bind,consistency=cached",
	// 	"source=${localEnv:HOME}${localEnv:USERPROFILE}/.kaggle,target=/root/.kaggle,type=bind,consistency=cached",
	// 	"source=${localEnv:HOME}${localEnv:USERPROFILE}/.kube,target=/root/.kube,type=bind,consistency=cached",
	// ],
	//   "userEnvProbe": "loginInteractiveShell",
	//   "runArgs": [ "--network=application-network" ],
	"containerEnv": {
		"ENV":"dev",
	},
	  "remoteEnv": {
		"ENV":"dev",
		// the original host directory which is needed for volume 
		// mount commands from inside the container (Docker in Docker)
		"HOST_PROJECT_PATH": "${localWorkspaceFolder}"
  		}
	}

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
